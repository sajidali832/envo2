-- supabase/migrations/20240601000000_create_initial_schema.sql

-- 1. Create earning_history table
CREATE TABLE IF NOT EXISTS public.earning_history (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_id uuid NOT NULL,
    description text,
    amount numeric NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT earning_history_pkey PRIMARY KEY (id),
    CONSTRAINT earning_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles (id) ON DELETE CASCADE
);
ALTER TABLE public.earning_history ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow users to see their own earning history" ON public.earning_history FOR SELECT USING (auth.uid() = user_id);
CREATE POLICY "Allow server-side inserts" ON public.earning_history FOR INSERT WITH CHECK (true); -- Broad access for server-side functions

-- 2. Create the daily credit function
CREATE OR REPLACE FUNCTION public.apply_daily_credit()
RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
    user_record record;
BEGIN
    FOR user_record IN SELECT id FROM public.profiles
    LOOP
        -- Add 200 PKR to total earnings
        UPDATE public.profiles
        SET total_earnings = total_earnings + 200
        WHERE id = user_record.id;

        -- Create a record in earning history
        INSERT INTO public.earning_history (user_id, description, amount)
        VALUES (user_record.id, 'Daily Credit', 200);
    END LOOP;
END;
$$;

-- 3. Schedule the function to run daily at midnight UTC (00:00)
-- Ensure pg_cron is enabled in your Supabase project
SELECT cron.schedule(
    'daily-credit-job',
    '0 0 * * *', -- This cron expression means "at 00:00 every day"
    $$
    SELECT public.apply_daily_credit();
    $$
);
